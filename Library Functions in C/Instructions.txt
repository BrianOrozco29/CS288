Write a C program with C library functions, which prints out the first part of a text file onto screen, similar to the head tool in Linux. Basically, you are asked to rewrite the program in homework 1-2. The new program uses C library functions (fread(), fgetc(), etc). 

Detailed requirements:
1. Name the program using the pattern SECTION#_NJITID#_1.c.  SECTION# is the three-digit section number of the CS288 section you registered (e.g., 001, 101, don't miss the leading 0s). NJITID# is the eight-digit NJIT ID (Not your UCID, Rutgers students also have NJIT IDs). 1 means this is the first problem. So your file name is something like 001_00123456_1.c (DO NOT COPY THIS AS YOUR FILE NAME!). 

The grader may use a script to find and test your programs. The script will not find your program if the program has a different name.

2. The program should NOT call read() system call or pread() system call to read the file. C library functions for reading files, such as fread() and fgetc(), must be used.

4. The program should analyze arguments in the command line, in order to determine 1) which file to open and 2) how many lines at the beginning of the file should be printed out onto screen. The format of the command for running the program is as follows (Important! If you don't follow strictly, the script testing your program may not be able to run your program correctly, and you may get lower grades).

./hw2_1   -n    #lines   pathname

#lines: the number of lines at the beginning of the file that should be printed out onto the screen.

pathname: the pathname of the file

Hint: you may use getopt() function in this part.

5. The output should be identical to the output of head tool with the same arguments.

Grading:
1. The executable file can be successfully generated with gcc ---- +5 points

2. The program can finish within 1 minute without crash when it is run with the following command: ---- +10 points

./hw2_1 -n 10 /etc/passwd 

3. The first line of the file can be printed out. --- +10 points

4. The output is identical to the output of head command with the same arguments. --- +25 points

The outputs will be saved into files and compared with diff tool under linux. You may redirect the outputs into files, and use diff to compare the files. Diff should not generate any output. 
